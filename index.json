[{"content":"Hugo页面常用的评论系统有两种：\n1.Disqus评论插件（一款国外第三方社会化评论系统）。\n2.Giscus评论系统（基于Github的Issues或Discussions存储的评论系统）。\n本文主要介绍第一种Disqus的本地设置，Giscus评论系统以后会补充，可以参考这里。国内用户需要 科学上网，才能进行以下所有操作！ Step 1 # 输入网址：https://disqus.com/ 打开Disqus官网。注册一个账号,也可以使用微软或者谷歌账号登陆。 登录后，点击Get Started。 填写完基本配置后，保存你填写的Shortname。 Step 2 # 生成一个layouts/partials/comments.html ，或者直接下载 (鼠标右击 -\u0026gt; 链接另存为) {{ if .Site.Config.Services.Disqus.Shortname }} \u0026lt;div id=\u0026#34;disqus_thread\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var disqus_config = function () { this.page.url = \u0026#39;{{ .Permalink }}\u0026#39;; this.page.identifier = \u0026#39;{{ .Permalink }}\u0026#39;; }; (function() { var d = document, s = d.createElement(\u0026#39;script\u0026#39;); s.src = \u0026#39;https://{{ .Site.Config.Services.Disqus.Shortname }}.disqus.com/embed.js\u0026#39;; s.setAttribute(\u0026#39;data-timestamp\u0026#39;, +new Date()); (d.head || d.body).appendChild(s); })(); \u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt;Please enable JavaScript to view the comments powered by Disqus.\u0026lt;/noscript\u0026gt; {{ end }} 在config file中的params.toml 中设置： [article] showComments = true 在config file中的hugo.toml 中设置： [services] [services.disqus] shortname = \u0026#39;kel1n1995\u0026#39; ","date":"2024-10-25","permalink":"/learn/hugonote-2/","section":"Learn","summary":"使用Disqus评论插件为Hugo网站添加评论系统","title":"【Learn】为Hugo网站添加评论系统"},{"content":"","date":null,"permalink":"/tags/github/","section":"Tags","summary":"","title":"Github"},{"content":"","date":null,"permalink":"/tags/hugo/","section":"Tags","summary":"","title":"Hugo"},{"content":" Share my work and research-related study notes. Including but not limited to study notes and insights on software, professional courses, academic books, programming languages, artificial intelligence, and more. Regarding Hugo, please refer to Hugo in-site tutorial to get started. The tutorial includes how to edit blog posts using Markdown syntax.\nFor the website theme Congo, please check the Congo in-site tutorial guide to begin. The tutorial provides detailed instructions on the website configuration parameters and usage under this theme. Other Resource: Hugo Official Tutorial Hugo Site Customization\n","date":null,"permalink":"/learn/","section":"Learn","summary":"","title":"Learn"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":" I currently work as a research assistant at the Shenzhen Institute of Agricultural Genomics, focusing on key research areas in systems and synthetic biology through the development of genome-scale metabolic network models.\nI welcome opportunities for communication!\nPlease lick on Research and Project to learn more about me.\n","date":null,"permalink":"/","section":"Welcome to my website ! 🎉","summary":"","title":"Welcome to my website ! 🎉"},{"content":" 本教程参考文章： #Reference 1 Reference 2 Reference 3\nNote 本教程只是草稿，还存在一些潜在的问题，请及时与我联系，或者在评论区留言，后续会不断更新和修改。 1 准备工作： #1.1 安装Git #Git是一个分布式版本控制系统，广泛用于软件开发和其他需要版本控制的项目中。 安装步骤可参考: https://blog.csdn.net/mukes/article/details/115693833 主要命令： - git init：初始化新仓库 - git clone：克隆远程仓库 - git add：暂存更改 - git commit：提交更改 - git push：推送到远程仓库 - git pull：从远程仓库拉取更新 - git branch：管理分支 - git merge：合并分支 1.2 GitHub网站创建 #访问GitHub创建账号。使用GitHub Pages 将托管你的网站。\n首先在 GitHub 上创建一个以username.github.io命名的项目。 需要为你的仓库添加一个README文件，能够激活仓库中的mian分支 仓库构建完成后，点击进入仓库的setting选项： 进入后点击Pages选项： 可以看到 此时 GitHub Pages已经为你生成了一个网页链接 https://anikelin.github.io/ （红框）。这将是你之后blog的网站地址。 如果没有出现网址，请将按照黄色框进行设置，source选择Deploy from a banch Banch 选择/main/(root),点击Save.等待一会儿后刷新界面就可以了。 1.3 Hugo的安装 #Hugo是一个流行的静态网站生成器。 优点：1.构建速度极快。2.不需要数据库。3.易于部署和维护。\n下载最新版的hugo文件包 https://github.com/gohugoio/hugo/tags 选择windows系统下的拓展版本： 2 开始搭建 #2.1 配置环境变量 # 将下载后的文件解压到你本地创建的文件夹比如C:\\Hugo中，并建立一个C:\\Hugo\\bin的文件夹，将hugo.exe文件移动到该文件夹中。 选择系统变量的中的变量Path，点击编辑，进入。 将C:\\Hugo\\bin路径添加到Path,点击确定，完成设置。 2.2 开始搭建hugo站点 # 在C:\\Hugo中进入终端，输入代码： hugo new site mysite Note ：mysite 是网站的路径，可以自定义命名。\n然后进入该路径 cd mysite 在该目录下你可以看到以下几个目录和 config.toml 文件\nC:\\Hugo\\mysite\\archetypes C:\\Hugo\\mysite\\assets C:\\Hugo\\mysite\\content C:\\Hugo\\mysite\\data C:\\Hugo\\mysite\\hugo.toml C:\\Hugo\\mysite\\i18n C:\\Hugo\\mysite\\layouts C:\\Hugo\\mysite\\static C:\\Hugo\\mysite\\themes C:\\Hugo\\mysite\\archetypes\\default.md Nice! 此时你已经完成了hugo的基本构架。\n2.3 设置hugo网页的主题 # 主题的下载和安装 你可以在 Hugo 官方社区上选择你喜爱的主题。 这里以[Blowfish] (https://themes.gohugo.io/themes/blowfish/) 为例进行后续的演示操作： 进入该主题的GitHub仓库： https://github.com/nunocoracao/blowfish 进行下载：\n你可以通过手动下载的方式，然后将该主题文件解压到你的C:\\Hugo\\mysite\\themes目录中去。 Note：要将文件名改为blowfish 也可以使用以下命令行在终端安装（需要开启全局代理）： cd mysite git init git submodule add -b main https://github.com/nunocoracao/blowfish.git themes/blowfish 主题的本地化配置-文件配置\n在你的网站根目录C:\\Hugo\\mysite中，删除 Hugo 自动生成的 hugo.toml 文件。 从文件夹C:\\Hugo\\mysite\\themes\\blowfish中复制config ,layouts,assets,static 文件，粘贴到 C:\\Hugo\\mysite 目录中。 从文件夹：C:\\Hugo\\mysite\\themes\\blowfish\\exampleSite中复制content，粘贴到 C:\\Hugo\\mysite 目录中。 删除掉C:\\Hugo\\mysite\\content\\samples目录中rich-content文件夹 主题的本地化配置-参数配置 打开C:\\Hugo\\mysite\\config\\_default\\hugo.toml文件（推荐使用visual stutio code打开和编辑），进行基础参数的修改。\ntheme = \u0026#34;blowfish\u0026#34; # UNCOMMENT THIS LINE baseURL = \u0026#34;https://anikelin.github.io/\u0026#34; defaultContentLanguage = \u0026#34;en\u0026#34; 主题的本地化配置-进阶配置 详细的教程可以参考该主题的官方教程文件 https://blowfish.page/zh-cn/ 这一过程可能需要花费一些时间。\n主题的本地化配置-启动服务 在C:\\Hugo\\mysite目录下进入终端运行：hugo server -D\n点击 http://localhost:1313/ 该界面就是hugo生成的本地网页文件 3 网页部署 #3.1 生成静态资源文件夹 # 在C:\\Hugo\\mysite目录下进入终端运行：hugo，就会生成一个名为 public 的静态资源文件夹 3.2 上传到GitHub远程仓库 # 首先在C:\\Hugo\\mysite\\public目录下进入终端运行\n初次推送到仓库的代码\ngit init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin {你的github仓库地址} git push -u origin main 第一次上传需要输入账号密码，否则会出现以下报错：\n解决办法：\ngit config --global user.email \u0026#34;you@example.com\u0026#34;# 你的GitHub注册邮箱 git config --global user.name \u0026#34;Your Name\u0026#34;#你的GitHub用户名 运行后，你将获得一个验证的 device code：\n转到：(https://github.com/login/device) 登录你的账号 并输入该device code\n使用git push -u origin main 可能会出现以下报错：\n报错原因： 远程仓库的main 分支出现了本地没有的更新，本教程中是由于提前在仓库AniKeLin.github.io添加一个README文件导致的。\n解决办法：\ngit init git add . git commit -m \u0026#34;update\u0026#34; git branch -M main git remote set-url origin https://github.com/AniKeLin/AniKeLin.github.io git push -u origin main --force # 加force 表示强制推送 推送成功后将看到：\n3.3 Github Action 自动部署 # Github Action 的token设置 前往profile的Settings -\u0026gt; Developer Settings -\u0026gt; Personal access tokens，创建一个 token(classic)。 - 进入到New personal access token (classic)界面后，参照图片中红框的设置。\n- 将生成的token 复制下来保存好。\n配置仓库的secret 新建一个GitHub仓库，这里我将其命名为Hugo，这个仓库建议将其设置为Private。 - 进入该仓库的Settings界面\n- 左边的菜单栏找到`Actions`界面 - 为该仓库新建一个Repository secrets\n- 将Name 设置为：GH_TOKEN ， Secret为你刚刚保存的token代码。点击add Secret,进入下一步\n本地文件配置：\n在你的网站根目录C:\\Hugo\\mysite中创建一个.github/workflows/deploy.yaml文件，将以下内容复制进去: name: deploy # 代码提交到main分支时触发github action on: push: branches: - main jobs: deploy: runs-on: ubuntu-latest steps: - name: Checkout uses: actions/checkout@v4 with: fetch-depth: 0 - name: Setup Hugo uses: peaceiris/actions-hugo@v3 with: hugo-version: \u0026#34;latest\u0026#34; extended: true - name: Build Web run: hugo -D - name: Deploy Web uses: peaceiris/actions-gh-pages@v4 with: PERSONAL_TOKEN: ${{ secrets.GH_TOKEN }} EXTERNAL_REPOSITORY: AniKeLin/AniKeLin.github.io #你的github名/你的仓库名 PUBLISH_BRANCH: main PUBLISH_DIR: ./public commit_message: auto deploy 在目录C:\\Hugo\\mysite中创建.gitignore文件，来避免提交不必要的文件。\n# 自动生成的文件 public resources .hugo_build.lock # hugo命令 hugo.exe 在目录C:\\Hugo\\mysite中运行终端将所有文件在上传到仓库，上传成功后会触发Github Action，来自动部署你的静态页面。\ngit init git add . git commit -m \u0026#34;first commit\u0026#34; git branch -M main git remote add origin https://github.com/AniKeLin/Hugo.git # 替换成{你的github仓库地址} git push -u origin main Note 后续本地文件更新后只需要在C:\\Hugo\\mysite运行终端，使用Git推送到AniKeLin/Hugo.git仓库： ```html git init git remote set-url origin https://github.com/AniKeLin/Hugo.git git add . git commit -m \u0026quot;update\u0026quot; git push ``` 点击 Link 可以查看本教程在示例主题 blowfish 中呈现的效果。\n4 补充 #4.1 注意事项 #本教程中容易混淆的地方：\n1.在GitHub中一共建立了两个仓库，分别为静态网页文件的发布的仓库AniKeLin.github.io（命名要用 {github用户名}.github.io）,简称网页仓库。以及Github Action自动部署的仓库Hugo.git,简称部署仓库。\n2.二者区别：将C:\\Hugo\\mysite\\public的所有文件传送到网页仓库AniKeLin.github.io。将C:\\Hugo\\mysite的所有文件传送到部署仓库Hugo.git。\n4.2 报错情况 #自动部署时出现：\n``` Run peaceiris/actions-gh-pages@v4 [INFO] Usage https://github.com/peaceiris/actions-gh-pages#readme Dump inputs Setup auth token Prepare publishing assets Setup Git config Create a commit Push the commit or tag /usr/bin/git push origin main remote: Permission to KeL1n1995/KeL1n1995.github.io.git denied to github-actions[bot]. fatal: unable to access 'https://github.com/KeL1n1995/KeL1n1995.github.io.git/': The requested URL returned error: 403 Error: Action failed with \u0026quot;The process '/usr/bin/git' failed with exit code 128\u0026quot; ``` 解决方法：\n提供正确的 Token 权限 确保 GitHub Actions 拥有访问仓库的权限。你可以使用 secrets 来安全地提供令牌。\n生成 GitHub Personal Access Token (PAT)：\n访问 GitHub 的 Personal Access Token 页面。 创建一个新的 token，勾选 repo 权限（用于访问私有仓库）。 复制生成的 token。 将 token 添加到 GitHub Actions secrets：\n在你的 GitHub 仓库中，进入 Settings -\u0026gt; Secrets and variables -\u0026gt; Actions。 点击 New repository secret，命名为 GH_TOKEN（或者任何适当的名称），然后将你刚刚创建的 Personal Access Token 作为值。 注意 这里设置的是secret 而不是 environment variable！ ","date":"2024-10-18","permalink":"/learn/hugonote-1/","section":"Learn","summary":"Use Github and Hugo to build a personal blog","title":"【Learn】使用Hugo+GitHub搭建自己的静态blog"},{"content":"以下是使用Git的基本步骤，适合初学者入门：\n安装Git - 从官网下载并安装Git（https://git-scm.com/） - 在命令行中验证安装：`git --version` 配置Git - 设置用户名：`git config --global user.name \u0026#34;Your Name\u0026#34;` - 设置邮箱：`git config --global user.email \u0026#34;your_email@example.com\u0026#34;` 创建新仓库 - 创建新文件夹：`mkdir my_project` - 进入文件夹：`cd my_project` - 初始化仓库：`git init` 添加文件到暂存区 - 创建文件：`touch README.md` - 添加文件：`git add README.md` - 添加所有文件：`git add .` 提交更改 - 提交：`git commit -m \u0026#34;Initial commit\u0026#34;` 查看状态和历史 - 检查状态：`git status` - 查看提交历史：`git log` 创建和切换分支 - 创建新分支：`git branch feature-branch` - 切换到新分支：`git checkout feature-branch` - 或者一步完成：`git checkout -b feature-branch` 合并分支 - 切回主分支：`git checkout main` - 合并分支：`git merge feature-branch` 处理远程仓库 - 添加远程仓库：`git remote add origin \u0026lt;repository-url\u0026gt;` - 推送到远程：`git push -u origin main` - 从远程拉取：`git pull origin main` 克隆现有仓库 - 克隆仓库：`git clone \u0026lt;repository-url\u0026gt;` 清空远程仓库的方法 git clone https://github.com/KeL1n1995/KeL1n1995.github.io.git cd KeL1n1995.github.io git rm -r * git commit -m \u0026#34;Clear repository\u0026#34; git push origin main ","date":"2024-10-14","permalink":"/learn/gitnote-1/","section":"Learn","summary":"使用Git的基本步骤，适合初学者入门","title":"【Learn】Git常用语法笔记"},{"content":"","date":null,"permalink":"/tags/git/","section":"Tags","summary":"","title":"Git"},{"content":"Challenges in Building HMOs Cell Factories # Low substrate specificity of glycosyltransferases. Difficult co-regulation of precursor synthesis pathways. Unclear key regulatory targets. Developments and Innovations #Design-Build-Test-Learn (DBTL) Iterative Framework for Enzyme Molecular Modification # We developed an integrated DBTL iterative framework that incorporates molecular dynamics simulations, quantum mechanics calculations, and structural biology analysis. This framework enhances enzyme substrate specificity and catalytic activity. Construction of MultiduBE for Multi-target Dual Base Editing # Using CRISPR/dCas12a, we built a MultiduBE (Multiplex Dual Base Editor), enabling targeted in-situ mutagenesis of specific genes. This technology allows for the creation of enzyme mutant libraries. Multi-Scale Integrated Metabolic Network Model: etiBsu1209 # Leveraging Model-Tool, an automated model construction software, we developed the etiBsu1209 model[1], a multi-scale integrated metabolic network that incorporates enzyme constraints, thermodynamic constraints, and transcriptional regulatory networks. This model allows for precise predictions of multi-product outputs with an accuracy of 74.3%. [1] etiBsu1209: A comprehensive multiscale metabolic model for Bacillus subtilis. DOI\nMachine Learning-Enhanced Multi-Omics Metabolic Network Model # Using high-quality multi-omics datasets, we constructed 34 machine learning-based ensemble models and developed the iBsu1209-ME model [2]. This model accurately predicts gene expression and cell growth with an accuracy of 87.9%. [2] A multi-omics, machine learning-aware, genome-wide metabolic model of Bacillus subtilis refines the gene expression and cell growth prediction. DOI\nDevelopment of Temperature-Sensitive Gene Circuits # We engineered temperature-sensitive transcription regulatory elements based on the CI857 transcription factor, and developed single-input multi-output and bidirectional gene circuits. These circuits allow for temperature-dependent sequential activation or repression of target gene expression. De Novo Design of Programmable Multifunctional Biomolecular Condensates # Utilizing liquid-liquid phase separation mechanisms, we designed a series of artificial disordered proteins (SIDPs) through a “building block” strategy. These proteins were used to construct intracellular artificial biomolecular condensates, enabling orthogonal regulation of metabolic networks and protein translation processes. Cascade Gene Circuit-Based Combinatorial Regulation and High-Throughput Screening # Cascade gene circuits were used to amplify “metabolite-fluorescence” signal conversion and fine-tune metabolic pathways. We constructed 5184 regulatory optimization combinations based on crRNA array libraries, leading to the identification of high-yield strains through flow cytometry initial screening and automated re-screening. High-Throughput Screening of Mutants Using Whole-Cell Sensors # We constructed a 2’-FL whole-cell biosensor, coupled with droplet microfluidics, to successfully screen for FutC mutants that increased the 2’-FL yield by 1.8 times without producing the byproduct DFL. Construction and Optimization of the 2\u0026rsquo;-Fucosyllactose (2\u0026rsquo;-FL) Cell Factory # By assembling the heterologous GDP-fucose synthesis pathway and enhancing the supply of cofactors and precursors, we achieved the de novo synthesis of 2\u0026rsquo;-FL using glucose/sucrose and lactose as substrates.\nWe developed a transcription factor screening platform that expands the substrate spectrum, allowing us to obtain a series of transcription factor mutants that specifically respond to sugars.\nA lactose-responsive transcription factor was used to construct a gene circuit that dynamically balances cell growth and precursor lactose synthesis. The 2\u0026rsquo;-FL yield reached 30.1 g/L in a 3-L bioreactor (using glucose as the sole carbon source).\nUsing E. coli MG1655 as the starting strain, we optimized the synthetic pathway and reconstructed multi-copy heterologous α-1,3-fucosyltransferase FutM. We also enhanced the soluble expression of key enzymes, successfully achieving the de novo synthesis of 3-FL.\nAn artificial membrane-free organelle system based on disordered proteins was constructed and applied to co-localize enzymes involved in the 3-FL synthesis pathway. This resulted in a significant improvement in the 3-FL yield, with a shake flask strain producing 8.2 g/L of 3-FL.\n","date":"2024-10-13","permalink":"/learn/conference-1/","section":"Learn","summary":"Human Milk Oligosaccharides (HMOs) Cell Factory","title":"【Conference】HMOs Cell Factory"},{"content":" 转载自微信公众号：汉江墨客\n原文链接 列宁的阅读与写作：探索共产主义者的精神动力 #近日读季正矩先生写的《列宁传》，感受颇深的一点是列宁惊人的阅读量和写作量。\n为了创作《帝国主义是资本主义的最高阶段》一书，列宁参阅的俄、德、英、法等各国的书籍达148种，载于各种期刊的论文达232篇，从中做的摘录、纲要、札记表格共20个笔记本，65万字。\n1912年《真理报》创刊到1914年被查封的两年间，列宁发表了文章和短评280多篇。\n熟悉社会主义史的同志会发现，丰富的阅读和勤恳的写作是社会主义领袖们普遍的特点。\n《马克思恩格斯全集》，字数达3200万字，《列宁全集》字数达1600万字，《斯大林全集》有300万字，《毛泽东文集》加《毛泽东选集》有337万字。\n这些著作相当部分是字字珠玑、思想深刻、内容考究的具有学术价值的名篇。如《资本论》，就是马克思花费40年，阅读1500种书籍，整理400余本笔记的心血之作。\n诚如马克思在《资本论》序言中所说：\n在科学上没有平坦的大道，只有不畏劳苦沿着陡峭山路攀登的人，才有希望达到光辉的顶点。\n而探讨革命导师们坚持写作的动因，我想对当代的共产主义者有着积极的意义。\n写作的三大动因 #1. 旺盛求知欲衍生的表达欲 #以马克思为例。他出生在德国莱茵省特里尔城，在他的青少年时期，有三位对他影响深远的人。\n亨利希·马克思：马克思的父亲，受人尊敬的律师，精通法律和文学哲学，富有民主主义精神。 维登巴赫：马克思就读的中学校长，历史学家和哲学家，学校贯彻自由主义精神，教师队伍内有许多进步人士。 路德维希·冯·威斯特华伦：马克思未来的岳父，特里尔的枢密顾问，贵族人士，思想开明，精通多国语言，热爱文学。 家庭、学校、友人的良好教育，培养了马克思热爱学习、勤于思考的习惯。在中学时期，马克思便掌握了法语、拉丁文、希腊文等语种，擅长数学，文笔斐然。对于一个热爱知识，涉猎广泛，善于思考的人来说，以积极的写作表达自己丰富而深刻的思想，是顺理成章的事情。\n2. 高尚的人文精神和强烈的入世激情 #如果说语言的发明开启了人类向文明社会前进的征程，那么文字的发明就为文明的传承和发展奠定了最坚实的基础。如果没有文字这一记录思想的载体，我们将痛失无数伟大的哲人。\n孔子、苏格拉底、释迦牟尼等人类先师，之所以能深刻影响人类文明数千年，就在于他们的弟子用文字记录下了他们的言行，保留了他们的思想。\n对于一个有担当的知识分子来说，著书立说、传道受业是他们自觉的任务和使命。\n在共产主义者这里，写作更有特殊的意义。\n马克思发动哲学革命以后，哲学的任务不仅是解释世界，还有改造世界。 马克思主义者的作品大多有共同的目标，即发现和阐明科学真理，扫除愚昧，探索并指明人类社会进步的正确方向。\n而支撑着他们废寝忘食地苦读书籍，夜以继昼地创作文章的，就在于他们有着高尚的人文精神和强烈的入世激情。\n这份精神和激情不是凭空掉下来的，它是人类优秀文明成果对作者长期影响、浸染的结果。作者在学习生活过程中产生的主体自觉也发挥着强大作用。\n人民领袖毛泽东成为马克思主义者的经历，就是这样的一个过程。\n早年，在求知欲的驱使下，毛泽东放弃继承在韶山的家业，外出求学。在长沙，他集中学习了西方近代民主主义和科学著作，《社会契约论》《国富论》《论法的精神》《物种起源》《进化论与伦理学》等现代人都只闻其名不读其文的优秀书籍，才十几岁的毛泽东全都读过。\n在接受进步思潮的同时，身边同胞的苦难生活也冲击着毛泽东的心灵，提醒他必须为拯救国家，争取民族独立寻找到一条切实可行的良方。\n建国后，与湖南一师的年轻校友回忆往事时，毛泽东就提到他那时为什么决定要走上革命道路：\n从韶山冲的情形来看，那里的人大都过着痛苦的生活，不是挨饿，就是挨冻。有无钱治病看着病死的；还有家庭里、乡邻间，为着大大小小的纠纷，吵嘴、打架，闹得鸡犬不宁，甚至弄得投塘、吊颈的；至于没有书读，做一世睁眼瞎子的就更多了。在韶山冲里，我就没有看见几个生活过得快活的人。韶山冲的情形是这样，全湘潭县、全湖南省、全中国、全世界的情形，恐怕也差不多！我真怀疑，人生在世间，难道都注定要过痛苦的生活吗？决不！为什么会有这种现象呢？这是制度不好，政治不好，是因为世界上存在人剥削人、人压迫人的制度，所以使世界大多数的人都陷入痛苦的深潭。这种不合理的现象，是不应该永远存在的，是应该彻底推翻、彻底改造的！总有一天，世界会起变化，一切痛苦的人，都会变成快活的人！幸福的人！世界的变化，不会自己发生，必须通过革命，通过人的努力。我因此想到，我们青年的责任真是重大，我们应该做的事情真多，要走的道路真长。从这时候起，我就决心要为全中国痛苦的人、全世界痛苦的人贡献自己全部的力量。\n3.同志的鼓励与支持 #如果说在最初作家写作是纯粹基于自己对文学的探索欲和表达欲，那么在其作品问世，真正成为一名作家之后，来自读者的正向反馈乃至鞭策就也会成为驱使作家继续创作的一个重要因素。\n以马克思为例：\n马克思从事写作职业，始于23岁向《莱茵报》投稿。他的文章逻辑严密而又充满激情，很快受到读者的欢迎。 他的文章吸引了恩格斯的注意，两人通过合作批判曾经的朋友鲍威尔兄弟，出版了《神圣家族》，并建立了深厚的友谊。 马克思在与恩格斯的友谊和支持下，继续着自己的革命事业。在恩格斯的经济援助下，马克思得以专心于《资本论》的研究。 不过，两人的初次见面还是闹了点误会。1842年11月，恩格斯顺道拜访莱茵报编辑部，见到了马克思。当时马克思正跟持无政府主义立场的柏林“自由人”进行论战，误认为恩格斯是后者的同伴，恩格斯也在鲍威尔兄弟的影响下对马克思怀有偏见，于是会见不欢而散。\n一年多以后，两人在巴黎会面，以往的误解烟消云散。在十天的相处中，他们畅谈哲学、经济学和历史，许多观点不谋而合，随后决定合作批判以前的朋友，现在的论敌鲍威尔兄弟。两人的第一部合著作品《神圣家族》应运而生，同时开启了余生肝胆相照，荣辱与共的伟大友谊。\n后来欧洲革命失败，马克思因办《新莱茵报》而破产，流亡英国陷入贫困。面对革命低潮和家庭的经商需要，恩格斯也无奈重回家族公司经营商业。\n恩格斯深知凭马克思的才华，完全能在科学工作上创造出非凡的业绩，不应该将过多精力放在处理生活问题上，因此力所能及地给予马克思无私的经济援助。据不完全统计，1851到1869年这18年时间里，恩格斯给予了马克思3000多英镑的援助，相当于现在700多万元人民币。\n在与恩格斯的友谊之外，马克思还受到了欧洲无产阶级的共同爱戴，是第一国际的灵魂人物。马克思的理论研究对指导国际工人运动具有重要意义。作为精神领袖，马克思当然也不能辜负广大同志们的信任和热爱。在为第一国际的工作劳心劳力之余，马克思还不懈地进行着自己《资本论》的研究。\n启示与总结 #上述三点给我们的启示是：\n作为共产主义者，应树立终身学习的观念，积极学习科学文化知识，从各国优秀文明成果中汲取营养，博采众长，为我所用。不可固步自封、敝帚自珍。 要重视和支持文学工作，勤于思考，善于论战。不可流于清谈，沉湎于教条机械的口号和道德说教。 不可上纲上线，党同伐异，唯我独尊。应重视自我批评与反思。 共产主义是人类社会迄今为止最崇高的社会理想，是关乎全人类解放的伟大事业。实现理想的道路必定会遇到许多艰难险阻，需要一代又一代人的接续奋斗。\n这就要求我们要努力增长才干，提携后进。文学工作是传承共产主义事业的重要一环，任何轻视甚至厌弃文学工作的观点都是愚蠢和无知的。诚如马克思所说：\n无知从来也不能帮助任何人。\n让我们高举共产主义的旗帜，将共产主义文学工作发扬光大，夺回失去的意识形态阵地，创造21世纪共产主义事业的不朽功勋！\n","date":"2024-10-13","permalink":"/article/post01/","section":"Article","summary":"列宁的阅读与写作：探索共产主义者的精神动力","title":"【转载】共产主义者为什么要坚持写作"},{"content":" A single spark can start a prairie fire. This section will mainly share some of my non-academic original writings, such as book notes, personal insights, thoughts, and more.\n","date":null,"permalink":"/article/","section":"Article","summary":"","title":"Article"},{"content":"","date":null,"permalink":"/tags/cell-factory/","section":"Tags","summary":"","title":"Cell Factory"},{"content":"","date":null,"permalink":"/tags/conference/","section":"Tags","summary":"","title":"Conference"},{"content":"","date":null,"permalink":"/tags/%E6%9D%82%E8%B0%88/","section":"Tags","summary":"","title":"杂谈"},{"content":"","date":null,"permalink":"/tags/%E8%BD%AC%E8%BD%BD/","section":"Tags","summary":"","title":"转载"},{"content":"Literature Title: Genome-scale metabolic reconstruction of 7,302 human microorganisms for personalized medicine.\nHeinken, A., Hertel, J., Acharya, G. et al. Genome-scale metabolic reconstruction of 7,302 human microorganisms for personalized medicine. Nat Biotechnol 41, 1320–1331 (2023).\nYou can Download Report File\nResearch Background: #How the Human Gut Microbiota Influences Drug Metabolism:\nCharacteristics of the Gut Microbiota: Composed of diverse microorganisms that vary significantly between individuals, capable of producing different metabolites.\nInteractions Between Gut Microbiota and Drugs:\nInteracts with drugs, altering their effects. Metabolizes many drugs, with varying activity between individuals. Plays a role in drug inactivation, activation, detoxification, or re-toxification. Therefore, the application of gut microbiota must consider diet, genetics, and personalized microbiota-based medical interventions. To predict these interventions, it is crucial to understand the distribution and stoichiometry of drug transformation reactions among different human microbial groups.\n","date":"2023-04-14","permalink":"/literature/note-1/","section":"Literature","summary":"In-depth Reading of Literature.","title":"【Literature】NBT:AGORA2-Model"},{"content":"","date":null,"permalink":"/tags/gut-microbiota/","section":"Tags","summary":"","title":"Gut Microbiota"},{"content":"","date":null,"permalink":"/tags/interactions/","section":"Tags","summary":"","title":"Interactions"},{"content":" The stones from other hills may serve to polish jade. By conducting close readings of recent high-quality papers in the relevant field, one can learn from the strengths of others, address their own weaknesses, and enhance their research capabilities.\n","date":null,"permalink":"/literature/","section":"Literature","summary":"","title":"Literature"},{"content":"","date":null,"permalink":"/tags/model/","section":"Tags","summary":"","title":"Model"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":" Main Work: Investigate relevant issues in systems biology and synthetic biology by constructing genome-scale metabolic network models.\nResearch Interests:\nCell factories Computer-aided design Metabolic engineering Metabolic pathway design Microbial interactions Plant photosynthetic pathways Strain optimization Recent Research:\nOptimizing the design of chrysanthemic acid synthesis in Escherichia coli using metabolic network models. Investigate the unique photosynthetic metabolic pathways and growth mechanisms of Mikania micrantha by constructing a plant metabolic network model that reflects the diurnal cycle. Construct a bacterial community model to study the dynamic growth changes of strains and their ecological relationships following interactions, assisting in the design of synthetic microbial communities (SynComs). ","date":null,"permalink":"/research/","section":"Research","summary":"","title":"Research"}]